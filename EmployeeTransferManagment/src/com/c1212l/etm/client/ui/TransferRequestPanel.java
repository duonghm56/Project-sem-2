/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.c1212l.etm.client.ui;

import com.c1212l.etm.bll.DepartmentBUS;
import com.c1212l.etm.bll.EmployeeBUS;
import com.c1212l.etm.bll.LocationBUS;
import com.c1212l.etm.bll.ProjectBUS;
import com.c1212l.etm.bll.TransferTypeBUS;
import com.c1212l.etm.dto.Department;
import com.c1212l.etm.dto.Employee;
import com.c1212l.etm.dto.Location;
import com.c1212l.etm.dto.Project;
import com.c1212l.etm.dto.TransferType;
import com.c1212l.etm.util.KeyValue;
import java.sql.Date;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Android21SDK
 */
public class TransferRequestPanel extends javax.swing.JFrame {

    /**
     * Creates new form TransferRequest
     */
    public TransferRequestPanel() {
        try {
            initComponents(); 
            getDateNow();
            initCmbTransferType();
            initCmbToProject();
            initCmbToDepartment();
            initCmbToLocation();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(TransferRequestPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(TransferRequestPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
   
            
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox6 = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        txtEmployeeName = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cmbToDepartment = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        cmbToLocation = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtReason = new javax.swing.JTextArea();
        btnSend = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        txtRequestDate = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        cmbTransferType = new javax.swing.JComboBox();
        cmbToProject = new javax.swing.JComboBox();
        txtFromProject = new javax.swing.JTextField();
        txtFromDepartment = new javax.swing.JTextField();
        txtFromLocation = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtTransferLetter = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Employee Name:");

        jLabel2.setText("From Project");

        jLabel3.setText("To Project");

        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel8.setText("From Department");

        txtEmployeeName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtEmployeeNameKeyReleased(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("Transfer Request");

        jLabel4.setText("To Department");

        jLabel5.setText("From Location");

        jLabel6.setText("To Location");

        jLabel7.setText("Reason");

        txtReason.setColumns(20);
        txtReason.setRows(5);
        jScrollPane1.setViewportView(txtReason);

        btnSend.setText("Send Request");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        jLabel10.setText("Request Date:");

        txtRequestDate.setEnabled(false);

        jLabel11.setText("Transfer Type:");

        txtFromProject.setEnabled(false);

        txtFromDepartment.setEnabled(false);

        txtFromLocation.setEnabled(false);

        jLabel12.setText("Transfer Letter");

        txtTransferLetter.setColumns(20);
        txtTransferLetter.setRows(5);
        jScrollPane2.setViewportView(txtTransferLetter);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(149, 149, 149))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(195, 195, 195)
                        .addComponent(btnSend)
                        .addGap(61, 61, 61)
                        .addComponent(btnReset))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(74, 74, 74)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(111, 111, 111)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cmbToLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
                                    .addComponent(txtFromLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel8)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel10)
                                        .addComponent(jLabel11))
                                    .addGap(63, 63, 63)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txtEmployeeName, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(cmbToDepartment, 0, 220, Short.MAX_VALUE)
                                        .addComponent(txtRequestDate)
                                        .addComponent(cmbTransferType, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cmbToProject, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtFromProject, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtFromDepartment, javax.swing.GroupLayout.Alignment.LEADING)))))))
                .addContainerGap(116, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(346, Short.MAX_VALUE)
                    .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(34, 34, 34)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel9)
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtEmployeeName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(cmbTransferType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRequestDate, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFromProject, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3)
                    .addComponent(cmbToProject, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(txtFromDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(cmbToDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFromLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cmbToLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jLabel7)
                        .addGap(44, 44, 44))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel12)
                        .addGap(78, 78, 78))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSend)
                    .addComponent(btnReset)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(51, 51, 51)
                    .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(641, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        txtEmployeeName.setText("");
        txtReason.setText("");
        txtFromProject.setText("");
        txtFromDepartment.setText("");
        txtFromLocation.setText("");
        cmbTransferType.setSelectedIndex(0);
        cmbToProject.setSelectedIndex(0);
        cmbToDepartment.setSelectedIndex(0);
        cmbToLocation.setSelectedIndex(0);

    }//GEN-LAST:event_btnResetActionPerformed

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        // TODO add your handling code here:
        /*    try {
            if (txtReason.getText().equals("")) {
                throw new Exception("Please enter Reason");
            }
            int transferTypeID = ((KeyValue) cmbTransferType.getSelectedItem()).getKey();
            boolean approve = false;
            Date requestDate = Date.valueOf(txtRequestDate.getText());
            String reason = txtReason.getText();  
            int toProjectID = ((KeyValue) cmbToProject.getSelectedItem()).getKey();

            int toDepartmentID = ((KeyValue) cmbToDepartment.getSelectedItem()).getKey();

            int toLocationID = ((KeyValue) cmbToLocation.getSelectedItem()).getKey();
            transferRequestBUS.addTransfer(transferTypeID, employeeID, requestDate, reason, approve, fromProjectID, toProjectID, fromDepartmentID, toDepartmentID, fromLocationID, toLocationID);
            JOptionPane.showMessageDialog(null, "Send success!");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);

        }
        * */
        
    }//GEN-LAST:event_btnSendActionPerformed

    private void txtEmployeeNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmployeeNameKeyReleased
        try {
            // TODO add your handling code here:
                 getEmployeeID();
                 setFromProject();
                 setFromDepartment();
                 setFromLocation();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(TransferRequestPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(TransferRequestPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtEmployeeNameKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TransferRequestPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TransferRequestPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TransferRequestPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TransferRequestPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TransferRequestPanel().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSend;
    private javax.swing.JComboBox cmbToDepartment;
    private javax.swing.JComboBox cmbToLocation;
    private javax.swing.JComboBox cmbToProject;
    private javax.swing.JComboBox cmbTransferType;
    private javax.swing.JComboBox jComboBox6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField txtEmployeeName;
    private javax.swing.JTextField txtFromDepartment;
    private javax.swing.JTextField txtFromLocation;
    private javax.swing.JTextField txtFromProject;
    private javax.swing.JTextArea txtReason;
    private javax.swing.JTextField txtRequestDate;
    private javax.swing.JTextArea txtTransferLetter;
    // End of variables declaration//GEN-END:variables
    //TransferRequestBUS transferRequestBUS = new TransferRequestBUS();
    private int employeeID,fromDepartmentID,fromProjectID,fromLocationID;
    
    private void initCmbTransferType() throws ClassNotFoundException, SQLException {
        cmbTransferType.removeAllItems();
        TransferTypeBUS transferTypeBUS = new TransferTypeBUS();
        cmbTransferType.addItem(new KeyValue(0, "Select"));
        cmbTransferType.addItem(new KeyValue(1,""));
        ArrayList<TransferType> arrTransferType = transferTypeBUS.getAllTransferType();
        for (TransferType transferType : arrTransferType) {
            cmbTransferType.addItem(new KeyValue(transferType.getTransferTypeID(), transferType.getTransferTypeName()));
        }
    }

    private void initCmbToProject() throws ClassNotFoundException, SQLException {
        cmbToProject.removeAllItems();
        ProjectBUS projectBUS = new ProjectBUS();
        cmbToProject.addItem(new KeyValue(0, "Select"));
        cmbToProject.addItem(new KeyValue(1,""));
        ArrayList<Project> arrProject = projectBUS.getAllProject();
        for (Project p : arrProject) {
            cmbToProject.addItem(new KeyValue(p.getProjectID(), p.getProjectName()));
        }
 }

           private void initCmbToLocation() throws ClassNotFoundException, SQLException{
            cmbToLocation.removeAllItems();
            LocationBUS locationBUS = new LocationBUS();
            cmbToLocation.addItem(new KeyValue(0, "Select"));
            cmbToLocation.addItem(new KeyValue(1,""));
            ArrayList<Location> arrLocation = locationBUS.getAllLocation();
            for (Location location : arrLocation) {
                 cmbToLocation.addItem(new KeyValue(location.getLocationID(),location.getLocationName()));
            }
    }   

    private void initCmbToDepartment() throws ClassNotFoundException, SQLException{
            cmbToDepartment.removeAllItems();
            DepartmentBUS departmentBUS = new DepartmentBUS();
            cmbToDepartment.addItem(new KeyValue(0, "Select"));
            cmbToDepartment.addItem(new KeyValue(1,""));
            ArrayList<Department> arrDepartment = departmentBUS.getAllDepartment();
            for (Department department : arrDepartment) {
                cmbToDepartment.addItem(new KeyValue(department.getDepartmentID(), department.getDepartmentName()));
            }
    } 
    private void getEmployeeID()throws ClassNotFoundException, SQLException
    {
        EmployeeBUS employeeBUS = new EmployeeBUS();
        ArrayList<Employee> arrEmployee = employeeBUS.getAllEmployees();
        for (Employee employee : arrEmployee) {
            if (employee.getEmployeeName().equals(txtEmployeeName.getText())) {
                employeeID = employee.getEmployeeID();
                fromDepartmentID = employee.getDepartnameID();
                fromProjectID = employee.getProjectID();
            }
        }
    }
    private void setFromProject ()throws ClassNotFoundException, SQLException
    {
        ProjectBUS projectBUS = new ProjectBUS();
        ArrayList<Project> arrProject = projectBUS.getAllProject();
        for (Project project : arrProject) {
            if (project.getProjectID() == fromProjectID) {
                txtFromProject.setText(project.getProjectName());
            }
        }
    }
   private void setFromDepartment ()throws ClassNotFoundException, SQLException
    {
        DepartmentBUS departmentBUS = new DepartmentBUS();
        ArrayList<Department> arrDepartment = departmentBUS.getAllDepartment();
        for (Department department : arrDepartment) {
            if (department.getDepartmentID() == fromDepartmentID) {
                txtFromDepartment.setText(department.getDepartmentName());
                fromLocationID =department.getLocationID();
            }
        }
    }
   private void setFromLocation ()throws ClassNotFoundException, SQLException
    {
        LocationBUS locationBUS = new LocationBUS();
        ArrayList<Location> arrLocation = locationBUS.getAllLocation();
        for (Location location : arrLocation) {
            if (location.getLocationID() == fromLocationID) {
                txtFromLocation.setText(location.getLocationName());
            }
        }
    }  
    private void getDateNow(){
      DateFormat dateFormat = new SimpleDateFormat ("yyyy-MM-dd");
            java.util.Date date = new java.util.Date();
            String string = dateFormat.format(date);
            txtRequestDate.setText(string);
}
}
