/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.c1212l.etm.ui;

import com.c1212l.etm.bll.LocationBUS;
import com.c1212l.etm.bll.TransferBUS;
import com.c1212l.etm.dal.LocationDAO;
import com.c1212l.etm.dal.TransferDAO;
import com.c1212l.etm.dto.Location;
import com.c1212l.etm.dto.Transfer;
import com.c1212l.etm.util.KeyValue;
import java.awt.Component;
import java.sql.Date;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Luu Bi
 */
public class TransferPanel extends javax.swing.JPanel {
    private TransferDAO  model = new TransferDAO(); 
    private Vector<Transfer>vctList = new Vector<Transfer>();
    private Vector vctHeader = new Vector();
    private Vector vctData = new Vector();
    LocationBUS bus = new LocationBUS();
    TransferBUS transferBUS = new TransferBUS();
    /**
     * Creates new form TransferPanel
     */
    public TransferPanel() {
        initComponents();
    }
  private void loadData()  
    {
        try {    
            vctList = model.listAllTransfer();
    
            vctHeader.add("Transfer ID");
            vctHeader.add("TransferType ID");
            vctHeader.add("Enployee ID");
            vctHeader.add("Transfer Relieving Date");
            vctHeader.add("Transfer Joining Date");
            vctHeader.add("Request Date");
            vctHeader.add("Reason");
            vctHeader.add("Approve");
            vctHeader.add("Approve Date");
            vctHeader.add("From Project ID");
            vctHeader.add("To Project ID");
            vctHeader.add("From Department ID");
            vctHeader.add("To Department ID");
            vctHeader.add("From Location ID");
            vctHeader.add("To Location ID");
            for(int i = 0; i < vctList.size(); i++) {
                Transfer tmp = vctList.elementAt(i);
                Vector vctRow = new Vector();
                vctRow.add(tmp.getTransferID());
                vctRow.add(tmp.getTransferTypeID());
                vctRow.add(tmp.getEmployeeID());
                vctRow.add(tmp.getTransferRelievingDate());
                vctRow.add(tmp.getTransferJoiningDate());
                vctRow.add(tmp.getRequestDate());
                vctRow.add(tmp.getReason());
                vctRow.add(tmp.getApprove());
                vctRow.add(tmp.getApproveDate());
                vctRow.add(tmp.getFromProjectID());
                vctRow.add(tmp.getToProjectID());
                vctRow.add(tmp.getFromDepartmentID());
                vctRow.add(tmp.getToDepartmentID());
                vctRow.add(tmp.getFromLocationID());
                vctRow.add(tmp.getToLocationID());
                vctData.add(vctRow);
            }
            tbTransferData.setModel(new DefaultTableModel(vctData,vctHeader));
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(LocationPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(LocationPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void reloadData()  
    {
        try {    
            vctData.removeAllElements();
            vctList = model.listAllTransfer();
            for(int i = 0; i < vctList.size(); i++) {
                Transfer tmp = vctList.elementAt(i);
                Vector vctRow = new Vector();
                vctRow.add(tmp.getTransferID());
                vctRow.add(tmp.getTransferTypeID());
                vctRow.add(tmp.getEmployeeID());
                vctRow.add(tmp.getTransferRelievingDate());
                vctRow.add(tmp.getTransferJoiningDate());
                vctRow.add(tmp.getRequestDate());
                vctRow.add(tmp.getReason());
                vctRow.add(tmp.getApprove());
                vctRow.add(tmp.getApproveDate());
                vctRow.add(tmp.getFromProjectID());
                vctRow.add(tmp.getToProjectID());
                vctRow.add(tmp.getFromDepartmentID());
                vctRow.add(tmp.getToDepartmentID());
                vctRow.add(tmp.getFromLocationID());
                vctRow.add(tmp.getToLocationID());
                vctData.add(vctRow);
            }
            tbTransferData.setModel(new DefaultTableModel(vctData,vctHeader));
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(LocationPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(LocationPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtTransferID = new javax.swing.JTextField();
        txtApprove = new javax.swing.JTextField();
        dcApproveDate = new com.toedter.calendar.JDateChooser();
        dcRequestDate = new com.toedter.calendar.JDateChooser();
        dcTransferJoiningDate = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtReason = new javax.swing.JTextArea();
        cmbFromDepartmentID = new javax.swing.JComboBox();
        cmbToProjectID = new javax.swing.JComboBox();
        dcTransferRelievingDate = new com.toedter.calendar.JDateChooser();
        cmbToDepartmentID = new javax.swing.JComboBox();
        cmbEmployeeID = new javax.swing.JComboBox();
        cmbTransferTypeID = new javax.swing.JComboBox();
        cmbFromProjectID = new javax.swing.JComboBox();
        cmbFromLocationID = new javax.swing.JComboBox();
        cmbToLocationID = new javax.swing.JComboBox();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbTransferData = new javax.swing.JTable();

        jLabel1.setText("Transfer ID:");

        jLabel2.setText("Employee ID:");

        jLabel3.setText("TransferType ID:");

        jLabel4.setText("Transfer Relieving Date:");

        jLabel5.setText("Transfer Joining Date:");

        jLabel6.setText("Request Date:");

        jLabel7.setText("Reason:");

        jLabel8.setText("Approve:");

        jLabel9.setText("Approve Date:");

        jLabel10.setText("From Project ID:");

        jLabel11.setText("To Project ID:");

        jLabel12.setText("From Department ID:");

        jLabel13.setText("To Department ID:");

        jLabel14.setText("From Location ID:");

        jLabel15.setText("To Location ID:");

        txtReason.setColumns(20);
        txtReason.setRows(5);
        jScrollPane1.setViewportView(txtReason);

        cmbFromDepartmentID.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cmbToProjectID.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cmbToDepartmentID.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cmbEmployeeID.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cmbTransferTypeID.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cmbFromProjectID.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cmbFromLocationID.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cmbToLocationID.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jScrollPane3.setPreferredSize(new java.awt.Dimension(300, 200));

        tbTransferData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbTransferData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbTransferDataMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tbTransferData);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel2))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(txtTransferID, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbEmployeeID, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmbTransferTypeID, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dcTransferRelievingDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dcTransferJoiningDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dcRequestDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(109, 109, 109)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15)
                            .addComponent(jLabel8))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dcApproveDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtApprove, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(cmbToLocationID, javax.swing.GroupLayout.Alignment.LEADING, 0, 83, Short.MAX_VALUE)
                                        .addComponent(cmbFromLocationID, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cmbToDepartmentID, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cmbFromDepartmentID, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(cmbToProjectID, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmbFromProjectID, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(140, 140, 140)
                                .addComponent(btnAdd)
                                .addGap(139, 139, 139)
                                .addComponent(btnUpdate)
                                .addGap(127, 127, 127)
                                .addComponent(btnDelete))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(87, 87, 87)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 598, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtTransferID, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(cmbTransferTypeID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel11)
                                .addComponent(cmbToProjectID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(cmbEmployeeID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(dcTransferRelievingDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(dcTransferJoiningDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel12)
                                .addComponent(cmbFromDepartmentID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtApprove, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dcApproveDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbFromProjectID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 21, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(cmbToDepartmentID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(dcRequestDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(cmbFromLocationID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbToLocationID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabel7))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete))
                .addGap(44, 44, 44)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tbTransferDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbTransferDataMouseClicked
        // TODO add your handling code here:
            int row = tbTransferData.rowAtPoint(evt.getPoint());
            Date transferRelievingDate = (Date)tbTransferData.getValueAt(row, 3);
            Date transferJoiningDate = (Date)tbTransferData.getValueAt(row, 4);
            Date requestDate = (Date)tbTransferData.getValueAt(row, 5);
            Date approveDate = (Date)tbTransferData.getValueAt(row,8);
            txtTransferID.setText(tbTransferData.getValueAt(row, 0).toString());
            cmbTransferTypeID.setSelectedItem(tbTransferData.getValueAt(row, 1));
            cmbEmployeeID.setSelectedItem(tbTransferData.getValueAt(row, 2));
            dcTransferRelievingDate.setDate(transferRelievingDate);
            dcTransferJoiningDate.setDate(transferJoiningDate);
            dcRequestDate.setDate(requestDate);
            txtReason.setText(tbTransferData.getValueAt(row,6).toString());
            txtApprove.setText(tbTransferData.getValueAt(row, 7).toString());
            dcApproveDate.setDate(approveDate);
            cmbFromProjectID.setSelectedItem(tbTransferData.getValueAt(row,9));
            cmbToProjectID.setSelectedItem(tbTransferData.getValueAt(row,10));
            cmbFromDepartmentID.setSelectedItem(tbTransferData.getValueAt(row, 11));
            cmbToDepartmentID.setSelectedItem(tbTransferData.getValueAt(row, 12));
            cmbFromLocationID.setSelectedItem(tbTransferData.getValueAt(row, 13));
            cmbToLocationID.setSelectedItem(tbTransferData.getValueAt(row, 14));
    }//GEN-LAST:event_tbTransferDataMouseClicked

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
                 try {
            if (txtTransferID.getText().equals("")) {
                throw new Exception("Please select Transfer ID");
            }
            if (txtReason.getText().equals("")) {
                throw new Exception("Please enter Reason");
            }
            if (txtApprove.getText().equals("")) {
                throw new Exception("Please enter Approve");
            }
            int transferID = Integer.parseInt(txtTransferID.getText());
            int transferTypeID = ((KeyValue) cmbTransferTypeID.getSelectedItem()).getKey();
            int employeeID = ((KeyValue) cmbEmployeeID.getSelectedItem()).getKey();
            Date transferRelievingDate = (Date) dcTransferRelievingDate.getDate();
            Date transferJoiningDate = (Date) dcTransferJoiningDate.getDate();
            String reason = txtReason.getText();
            String approve = txtApprove.getText();
            Date approveDate = (Date) dcApproveDate.getDate();
            int fromProjectID = ((KeyValue) cmbFromProjectID.getSelectedItem()).getKey();
            int toProjectID = ((KeyValue) cmbToProjectID.getSelectedItem()).getKey();
            int fromDepartmentID = ((KeyValue) cmbFromDepartmentID.getSelectedItem()).getKey();
            int toDepartmentID = ((KeyValue) cmbToDepartmentID.getSelectedItem()).getKey();
            int formLocationID = ((KeyValue) cmbFromLocationID.getSelectedItem()).getKey();
            int toLocationID = ((KeyValue) cmbToLocationID.getSelectedItem()).getKey();
            transferBUS.updateTransfer(transferID, transferTypeID, employeeID, transferRelievingDate, transferJoiningDate, approveDate, reason, approve, approveDate, fromProjectID, toProjectID, fromDepartmentID, toDepartmentID, formLocationID, toLocationID);
            reloadData();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
            ex.printStackTrace();
        }

    }//GEN-LAST:event_btnAddActionPerformed
    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
              try {
            if (txtTransferID.getText().equals("")) {
                throw new Exception("Please select Transfer ID");
            }
            if (txtReason.getText().equals("")) {
                throw new Exception("Please enter Reason");
            }
            if (txtApprove.getText().equals("")) {
                throw new Exception("Please enter Approve");
            }
            int transferTypeID = ((KeyValue) cmbTransferTypeID.getSelectedItem()).getKey();
            int employeeID = ((KeyValue) cmbEmployeeID.getSelectedItem()).getKey();
            Date transferRelievingDate = (Date) dcTransferRelievingDate.getDate();
            Date transferJoiningDate = (Date) dcTransferJoiningDate.getDate();
            String reason = txtReason.getText();
            String approve = txtApprove.getText();
            Date approveDate = (Date) dcApproveDate.getDate();
            int fromProjectID = ((KeyValue) cmbFromProjectID.getSelectedItem()).getKey();
            int toProjectID = ((KeyValue) cmbToProjectID.getSelectedItem()).getKey();
            int fromDepartmentID = ((KeyValue) cmbFromDepartmentID.getSelectedItem()).getKey();
            int toDepartmentID = ((KeyValue) cmbToDepartmentID.getSelectedItem()).getKey();
            int formLocationID = ((KeyValue) cmbFromLocationID.getSelectedItem()).getKey();
            int toLocationID = ((KeyValue) cmbToLocationID.getSelectedItem()).getKey();
            transferBUS.addTransfer(transferTypeID, employeeID, transferRelievingDate, transferJoiningDate, approveDate, reason, approve, approveDate, fromProjectID, toProjectID, fromDepartmentID, toDepartmentID, formLocationID, toLocationID);
            reloadData();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
               if(txtTransferID.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Please select Transfer ID");
        }else{
            try {
                if (JOptionPane.showConfirmDialog(null, "Are you sure to delete?", "Delete", JOptionPane.YES_NO_OPTION) == JOptionPane.OK_OPTION) {
                    transferBUS.deleteTransfer(Integer.parseInt(txtTransferID.getText()));
                    reloadData();
                }
            } catch (Exception ex){
                JOptionPane.showMessageDialog(null, "Delete fail");
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox cmbEmployeeID;
    private javax.swing.JComboBox cmbFromDepartmentID;
    private javax.swing.JComboBox cmbFromLocationID;
    private javax.swing.JComboBox cmbFromProjectID;
    private javax.swing.JComboBox cmbToDepartmentID;
    private javax.swing.JComboBox cmbToLocationID;
    private javax.swing.JComboBox cmbToProjectID;
    private javax.swing.JComboBox cmbTransferTypeID;
    private com.toedter.calendar.JDateChooser dcApproveDate;
    private com.toedter.calendar.JDateChooser dcRequestDate;
    private com.toedter.calendar.JDateChooser dcTransferJoiningDate;
    private com.toedter.calendar.JDateChooser dcTransferRelievingDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tbTransferData;
    private javax.swing.JTextField txtApprove;
    private javax.swing.JTextArea txtReason;
    private javax.swing.JTextField txtTransferID;
    // End of variables declaration//GEN-END:variables
}
