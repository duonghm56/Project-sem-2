/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.c1212l.etm.ui;

import com.c1212l.etm.bll.TransferTypeBUS;
import com.c1212l.etm.dto.TransferType;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Luu Bi
 */
public class TransferTypePanel extends javax.swing.JPanel {

    /**
     * Creates new form TransferTypePanel
     */
    public TransferTypePanel() {
         try {
            initComponents();
            initTable();
            lstTransferType = transferTypeBUS.getAllTransferType();
            fillData(lstTransferType);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ProjectPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ProjectPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtTransferTypeID = new javax.swing.JTextField();
        txtTransferTypeName = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbTransferTypeData = new javax.swing.JTable();

        setBorder(javax.swing.BorderFactory.createTitledBorder("TransferType Manager"));

        jLabel1.setText("TransferType Name:");

        jLabel2.setText("TransferType ID:");

        txtTransferTypeName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTransferTypeNameKeyPressed(evt);
            }
        });

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        tbTransferTypeData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbTransferTypeData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbTransferTypeDataMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbTransferTypeData);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(69, 69, 69)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtTransferTypeName)
                            .addComponent(txtTransferTypeID, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(btnAdd)
                        .addGap(35, 35, 35)
                        .addComponent(btnUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                        .addComponent(btnDelete)
                        .addGap(12, 12, 12)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtTransferTypeID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTransferTypeName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        if (txtTransferTypeName.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter transfertype name");
        } else {
            try {
                transferTypeBUS.addTransferType(txtTransferTypeName.getText());
                reloadData();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Insert Fail !!!");
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void txtTransferTypeNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTransferTypeNameKeyPressed
        // TODO add your handling code here:
          try {
            loadSearchTransferTypeName();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ProjectPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ProjectPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtTransferTypeNameKeyPressed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
             if (txtTransferTypeID.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please select project");
        } else {
            try {
                if (JOptionPane.showConfirmDialog(null, "Are you sure to delete?", "Delete", JOptionPane.YES_NO_OPTION) == JOptionPane.OK_OPTION) {
                    transferTypeBUS.deleteTransferType(Integer.parseInt(txtTransferTypeID.getText()));
                    reloadData();
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Delete Fail !!!");
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
            if (txtTransferTypeID.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please select project");
        } else {
            try {
                transferTypeBUS.updateTransferType(
                        Integer.parseInt(txtTransferTypeID.getText()),
                        txtTransferTypeName.getText());
                reloadData();
                JOptionPane.showMessageDialog(null, "Update Success !!!");
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Update Fail !!!");
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void tbTransferTypeDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbTransferTypeDataMouseClicked
        // TODO add your handling code here:
         int row = tbTransferTypeData.rowAtPoint(evt.getPoint());
        txtTransferTypeID.setText(tbTransferTypeData.getValueAt(row, 0).toString());
        txtTransferTypeName.setText(tbTransferTypeData.getValueAt(row, 1).toString());
    }//GEN-LAST:event_tbTransferTypeDataMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbTransferTypeData;
    private javax.swing.JTextField txtTransferTypeID;
    private javax.swing.JTextField txtTransferTypeName;
    // End of variables declaration//GEN-END:variables
 DefaultTableModel tblModel;
    ArrayList<TransferType> lstTransferType;
    TransferTypeBUS transferTypeBUS = new TransferTypeBUS();

    private void initTable() {
        Vector header = new Vector();
        header.add("TransferType ID");
        header.add("TransferType Name");
        tblModel = new DefaultTableModel(header, 0);
        tbTransferTypeData.setModel(tblModel);
    }

    private void fillData(ArrayList<TransferType> lst) {
        if (lst != null) {
            for (TransferType transfer : lst) {
                tblModel.addRow(transfer.getVector());
            }
        }
    }

    private void reloadData() {
        try {
            initTable();
            fillData(transferTypeBUS.getAllTransferType());
            initTextField();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ProjectPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ProjectPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void initTextField() {
        txtTransferTypeID.setText("");
        txtTransferTypeName.setText("");
    }

    private void loadSearchTransferTypeName() throws ClassNotFoundException, SQLException {
        String transferTypeName = "";
        if (!txtTransferTypeName.getText().equals("")) {
            if (!transferTypeName.contains("where")) {
                transferTypeName += " where projectName like '%" + txtTransferTypeName.getText() + "%'";
            } else {
                transferTypeName += " and projectName like '%" + txtTransferTypeName.getText() + "%'";
            }
        }
        initTable();
        lstTransferType = transferTypeBUS.searchTransferType(transferTypeName);
        fillData(lstTransferType); 
        }       
}
