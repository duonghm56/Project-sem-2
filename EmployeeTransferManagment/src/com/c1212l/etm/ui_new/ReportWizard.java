/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.c1212l.etm.ui_new;

import com.c1212l.etm.bll.DepartmentBUS;
import com.c1212l.etm.bll.ProjectBUS;
import com.c1212l.etm.bll.TransferBUS;
import com.c1212l.etm.dao.LocationDAO;
import com.c1212l.etm.dto.Department;
import com.c1212l.etm.dto.Location;
import com.c1212l.etm.dto.Transfer;
import com.c1212l.etm.report.TransferView;
import com.c1212l.etm.util.KeyValue;
import com.c1212l.etm.util.MyReport;
import com.c1212l.etm.util.MyUtil;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;

/**
 *
 * @author DUONGHM
 */
public class ReportWizard extends javax.swing.JFrame {

    /**
     * Creates new form ReportWizard
     */
    public ReportWizard() {
        initComponents();
        reloadData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grpRdoDate = new javax.swing.ButtonGroup();
        panelDate = new javax.swing.JPanel();
        chkEnableDate = new javax.swing.JCheckBox();
        rdoByMonth = new javax.swing.JRadioButton();
        rdoTimeSpan = new javax.swing.JRadioButton();
        panelMonth = new javax.swing.JPanel();
        dcMonth = new com.toedter.calendar.JMonthChooser();
        dcYear = new com.toedter.calendar.JYearChooser();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        panelTimeSpan = new javax.swing.JPanel();
        dcStartDate = new com.toedter.calendar.JDateChooser();
        dcEndDate = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        chkEnableProject = new javax.swing.JCheckBox();
        cmbFromProject = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cmbToProject = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        chkEnableDepartment = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cmbFromDepartment = new javax.swing.JComboBox();
        cmbToDepartment = new javax.swing.JComboBox();
        btnReset = new javax.swing.JButton();
        btnPrint = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelDate.setBorder(javax.swing.BorderFactory.createTitledBorder("Approve Date"));

        chkEnableDate.setText("Enable Search By Date");

        grpRdoDate.add(rdoByMonth);
        rdoByMonth.setSelected(true);
        rdoByMonth.setText("By month");
        rdoByMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoByMonthActionPerformed(evt);
            }
        });

        grpRdoDate.add(rdoTimeSpan);
        rdoTimeSpan.setText("Time span");
        rdoTimeSpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoTimeSpanActionPerformed(evt);
            }
        });
        rdoTimeSpan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                rdoTimeSpanKeyReleased(evt);
            }
        });

        panelMonth.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        dcYear.setPreferredSize(new java.awt.Dimension(60, 25));

        jLabel5.setText("Month");

        jLabel6.setLabelFor(dcYear);
        jLabel6.setText("Year");

        javax.swing.GroupLayout panelMonthLayout = new javax.swing.GroupLayout(panelMonth);
        panelMonth.setLayout(panelMonthLayout);
        panelMonthLayout.setHorizontalGroup(
            panelMonthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMonthLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelMonthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelMonthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dcMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dcYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelMonthLayout.setVerticalGroup(
            panelMonthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelMonthLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelMonthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dcMonth, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelMonthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(dcYear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelTimeSpan.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel7.setText("From");

        jLabel8.setText("To");

        javax.swing.GroupLayout panelTimeSpanLayout = new javax.swing.GroupLayout(panelTimeSpan);
        panelTimeSpan.setLayout(panelTimeSpanLayout);
        panelTimeSpanLayout.setHorizontalGroup(
            panelTimeSpanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTimeSpanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelTimeSpanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelTimeSpanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dcEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dcStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelTimeSpanLayout.setVerticalGroup(
            panelTimeSpanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTimeSpanLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelTimeSpanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dcStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelTimeSpanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dcEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout panelDateLayout = new javax.swing.GroupLayout(panelDate);
        panelDate.setLayout(panelDateLayout);
        panelDateLayout.setHorizontalGroup(
            panelDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDateLayout.createSequentialGroup()
                .addGroup(panelDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDateLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(chkEnableDate))
                    .addGroup(panelDateLayout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(rdoByMonth)
                        .addGap(109, 109, 109)
                        .addComponent(rdoTimeSpan))
                    .addGroup(panelDateLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(panelMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(panelTimeSpan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelDateLayout.setVerticalGroup(
            panelDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDateLayout.createSequentialGroup()
                .addComponent(chkEnableDate)
                .addGap(0, 0, 0)
                .addGroup(panelDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdoByMonth)
                    .addComponent(rdoTimeSpan))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDateLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(panelMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelDateLayout.createSequentialGroup()
                        .addComponent(panelTimeSpan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Project"));

        chkEnableProject.setText("Enable Search By Project");

        jLabel1.setText("From Project");

        jLabel2.setText("To Project");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkEnableProject)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cmbFromProject, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbToProject, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(chkEnableProject)
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbFromProject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbToProject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Department"));

        chkEnableDepartment.setText("Enable Search By Department");

        jLabel3.setText("From Department");

        jLabel4.setText("To Department");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkEnableDepartment)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbFromDepartment, 0, 138, Short.MAX_VALUE)
                            .addComponent(cmbToDepartment, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chkEnableDepartment)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cmbFromDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cmbToDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image_new/arrow_undo.png"))); // NOI18N
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image_new/printer_32.png"))); // NOI18N
        btnPrint.setText("Print");
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnPrint)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnReset))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(panelDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(104, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReset)
                    .addComponent(btnPrint))
                .addContainerGap(78, Short.MAX_VALUE))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-529)/2, (screenSize.height-572)/2, 529, 572);
    }// </editor-fold>//GEN-END:initComponents

    private void rdoByMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoByMonthActionPerformed
    }//GEN-LAST:event_rdoByMonthActionPerformed

    private void rdoTimeSpanKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rdoTimeSpanKeyReleased
    }//GEN-LAST:event_rdoTimeSpanKeyReleased

    private void rdoTimeSpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoTimeSpanActionPerformed
    }//GEN-LAST:event_rdoTimeSpanActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        reloadData();
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
                
        try {
            ArrayList<TransferView> lstTransferViews = new ArrayList<TransferView>();
            ArrayList<Transfer> lstTransfer = new TransferBUS().searchTransfer(getCondition());
            for (int i = 0; i < lstTransfer.size(); i++) {
                lstTransferViews.add(lstTransfer.get(i).getTransferView());
            }
            HashMap map = new HashMap();
            JRBeanCollectionDataSource datasource = new JRBeanCollectionDataSource(lstTransferViews);
            MyReport myReport = new MyReport("src\\com\\c1212l\\etm\\report\\report1.jasper", map, datasource);
            myReport.getFrameReport().setVisible(true);
        } catch (Exception e) {
            System.out.println(e);
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnPrintActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReportWizard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReportWizard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReportWizard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReportWizard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReportWizard().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnReset;
    private javax.swing.JCheckBox chkEnableDate;
    private javax.swing.JCheckBox chkEnableDepartment;
    private javax.swing.JCheckBox chkEnableProject;
    private javax.swing.JComboBox cmbFromDepartment;
    private javax.swing.JComboBox cmbFromProject;
    private javax.swing.JComboBox cmbToDepartment;
    private javax.swing.JComboBox cmbToProject;
    private com.toedter.calendar.JDateChooser dcEndDate;
    private com.toedter.calendar.JMonthChooser dcMonth;
    private com.toedter.calendar.JDateChooser dcStartDate;
    private com.toedter.calendar.JYearChooser dcYear;
    private javax.swing.ButtonGroup grpRdoDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel panelDate;
    private javax.swing.JPanel panelMonth;
    private javax.swing.JPanel panelTimeSpan;
    private javax.swing.JRadioButton rdoByMonth;
    private javax.swing.JRadioButton rdoTimeSpan;
    // End of variables declaration//GEN-END:variables

    private void initCmbFromDepartment() throws ClassNotFoundException, SQLException {
        cmbFromDepartment.removeAllItems();
        cmbFromDepartment.addItem(new KeyValue(-1, ""));
        DepartmentBUS departmentBUS = new DepartmentBUS();
        LocationDAO locationDAO = new LocationDAO();
        ArrayList<Department> arrDepartment = departmentBUS.getAllDepartment();
        for (Department department : arrDepartment) {
            Location location = locationDAO.getLocationById(department.getLocationID());
            cmbFromDepartment.addItem(new KeyValue(
                    department.getDepartmentID(),
                    department.getDepartmentName() + " - " + location.getLocationName()));
        }
    }

    private void initCmbToDepartment() throws ClassNotFoundException, SQLException {
        cmbToDepartment.removeAllItems();
        cmbToDepartment.addItem(new KeyValue(-1, ""));
        DepartmentBUS departmentBUS = new DepartmentBUS();
        LocationDAO locationDAO = new LocationDAO();
        ArrayList<Department> arrDepartment = departmentBUS.getAllDepartment();
        for (Department department : arrDepartment) {
            Location location = locationDAO.getLocationById(department.getLocationID());
            cmbToDepartment.addItem(new KeyValue(
                    department.getDepartmentID(),
                    department.getDepartmentName() + " - " + location.getLocationName()));
        }
    }

    private void initCmbFromProject() throws ClassNotFoundException, SQLException {
        cmbFromProject.removeAllItems();
        cmbFromProject.addItem(new KeyValue(-1, ""));
        ProjectBUS projectBUS = new ProjectBUS();
        ArrayList<com.c1212l.etm.dto.Project> arrProject = projectBUS.getAllProject();
        for (com.c1212l.etm.dto.Project p : arrProject) {
            cmbFromProject.addItem(new KeyValue(p.getProjectID(), p.getProjectName()));
        }
    }

    private void initCmbToProject() throws ClassNotFoundException, SQLException {
        cmbToProject.removeAllItems();
        cmbToProject.addItem(new KeyValue(-1, ""));
        ProjectBUS projectBUS = new ProjectBUS();
        ArrayList<com.c1212l.etm.dto.Project> arrProject = projectBUS.getAllProject();
        for (com.c1212l.etm.dto.Project p : arrProject) {
            cmbToProject.addItem(new KeyValue(p.getProjectID(), p.getProjectName()));
        }
    }

    private String getCondition() {
        String condition = "";

        if (chkEnableDate.isSelected()) {
            String _tmp = "";
            if (rdoByMonth.isSelected()) {
                _tmp += " month(approveDate) = " + (dcMonth.getMonth() + 1) + " and year(approveDate) = " + dcYear.getYear();
            }
            if (rdoTimeSpan.isSelected()) {
                _tmp += " approveDate >= '" + MyUtil.getDateStr(dcStartDate) + "' and approveDate <= '" + MyUtil.getDateStr(dcEndDate) + "' ";
            }
            if (!condition.contains("where")) {
                condition += " where " + _tmp;
            } else {
                condition += " and " + _tmp;
            }
        }

        if (chkEnableProject.isSelected()) {
            KeyValue fromProject = (KeyValue) cmbFromProject.getSelectedItem();
            if (fromProject != null && !fromProject.getValue().equals("")) {
                if (!condition.contains("where")) {
                    condition += " where fromProjectID = " + fromProject.getKey() + " ";
                } else {
                    condition += " and fromProjectID = " + fromProject.getKey() + " ";
                }
            }

            KeyValue toProject = (KeyValue) cmbToProject.getSelectedItem();
            if (toProject != null && !toProject.getValue().equals("")) {
                if (!condition.contains("where")) {
                    condition += " where toProjectID = " + toProject.getKey() + " ";
                } else {
                    condition += " and toProjectID = " + toProject.getKey() + " ";
                }
            }
        }

        if (chkEnableDepartment.isSelected()) {
            KeyValue fromDepartment = (KeyValue) cmbFromDepartment.getSelectedItem();
            if (fromDepartment != null && !fromDepartment.getValue().equals("")) {
                if (!condition.contains("where")) {
                    condition += " where fromDepartmentID = " + fromDepartment.getKey() + " ";
                } else {
                    condition += " and fromDepartmentID = " + fromDepartment.getKey() + " ";
                }
            }

            KeyValue toDepartment = (KeyValue) cmbToDepartment.getSelectedItem();
            if (toDepartment != null && !toDepartment.getValue().equals("")) {
                if (!condition.contains("where")) {
                    condition += " where toDepartmentID = " + toDepartment.getKey() + " ";
                } else {
                    condition += " and toDepartmentID = " + toDepartment.getKey() + " ";
                }
            }
        }

        return condition;
    }

    private void reloadData() {
        try {
            initCmbFromDepartment();
            initCmbFromProject();
            initCmbToProject();
            initCmbToDepartment();
            initCmbFromProject();
            Date cur = new Date();
            dcStartDate.setDate(cur);
            dcEndDate.setDate(cur);
            dcMonth.setMonth(cur.getMonth());
            dcMonth.setMonth(cur.getYear());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ReportWizard.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ReportWizard.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    @Override
    public void validate() {
        super.validate();
    }
}
