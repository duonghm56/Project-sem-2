/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Management.java
 *
 * Created on Nov 3, 2010, 8:54:06 PM
 */
package GUI;

import Bussiness.TableModelDepartment;
import Bussiness.TableModelEmployee;
import Bussiness.TableModelLocation;
import Bussiness.TableModelProject;
import Bussiness.TableModelTransfer;
import Bussiness.validateInfo;
import DataAccess.DepartmentDAO;
import DataAccess.EmployeeDAO;
import DataAccess.LocationDAO;
import DataAccess.ProjectDAO;
import DataAccess.TransferDAO;
import Entity.Admin;
import Entity.Department;
import Entity.Employee;
import Entity.Location;
import Entity.Project;
import Entity.Transfer;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author home
 */
public class MainAdministrator extends javax.swing.JFrame {

    private static TableModelEmployee tablemodelEmpl = new TableModelEmployee();
    private static TableModelTransfer tablemodelTrans = new TableModelTransfer();
    private static TableModelLocation tablemodelLocation = new TableModelLocation();
    private static TableModelProject tablemodelProject = new TableModelProject();
    private static TableModelDepartment tablemodelDepartment = new TableModelDepartment();
    private Employee objE = null;
    private Transfer objTransfer = null;
    private Project objProject = null;
    private Location objLocation = null;
    private Department objDepartment = null;
    private AddEmployee addEmployee = null;
    private EditEmployee editEmployee = null;
    private AddProject addProject = null;
    private EditProject editProject = null;
    private AddLocation addLocation = null;
    private EditLocation editLocation = null;
    private AddDepartment addDepartment = null;
    private EditDepartment editDepartment = null;
    private int employeeID = 0;
    private int locationID = 0;
    private int transferID = 0;
    private int projectID = 0;
    private int departmentID = 0;
    private boolean tblEmployeeSelect = false;
    private boolean tblProjectSelect = false;
    private boolean tblLocationSelect = false;
    private boolean tblDepartmentSelect = false;
    private boolean tblTransferSelect = false;
    private String oldPass;

    /** Creates new form Management */
    public MainAdministrator() {
        initComponents();
        try {
            loadStatic();
            loadEmployee();
            loadProject();
            loadLocation();
            loadDeparment();
            onLoadTableEmployee();
            onLoadTableLocation();
            onLoadTableTransfer();
            onLoadTableProject();
            onloadTableDepartment();
        } catch (SQLException ex) {
            Logger.getLogger(MainAdministrator.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        lblEmail = new javax.swing.JLabel();
        lblEmailContent = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        btnChangePass = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        btnHelp = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        btnAbout = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        btnLogoff = new javax.swing.JButton();
        pnlHeader = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        lblFullNameContent = new javax.swing.JLabel();
        lblFullName = new javax.swing.JLabel();
        lbEmail = new javax.swing.JLabel();
        lblEmailContent2 = new javax.swing.JLabel();
        lbladminID = new javax.swing.JLabel();
        lbladminIDContent = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        lblTotalApprove = new javax.swing.JLabel();
        lblTotalNotApprove = new javax.swing.JLabel();
        lblTotalWaiting = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        lblTotalE = new javax.swing.JLabel();
        lblTotalD = new javax.swing.JLabel();
        lblTotalL = new javax.swing.JLabel();
        lblTotalP = new javax.swing.JLabel();
        lblTotalTransferRequest = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        cbSearchTransferByStatus = new javax.swing.JComboBox();
        cbSearchTransferByEmployee = new javax.swing.JComboBox();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        cbSearchTransferByFromLocation = new javax.swing.JComboBox();
        cbSearchTransferByFromDepartment = new javax.swing.JComboBox();
        cbSearchTransferByFromProject = new javax.swing.JComboBox();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        cbSearchTransferByToDepartment = new javax.swing.JComboBox();
        cbSearchTransferByToLocation = new javax.swing.JComboBox();
        cbSearchTransferByToProject = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblTransfer = new javax.swing.JTable();
        btnMakeTransfer = new javax.swing.JButton();
        btnViewDetails = new javax.swing.JButton();
        btnDeleteTransfer = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEmployee = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        txtKeySearchByName = new javax.swing.JTextField();
        cbSearchEmployeeByLocation = new javax.swing.JComboBox();
        cbSearchEmployeeByDepartment = new javax.swing.JComboBox();
        cbSearchEmployeeByProject = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        btnAddEmployee = new javax.swing.JButton();
        btnEditEmployee = new javax.swing.JButton();
        btnDeleteEmployee = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblProject = new javax.swing.JTable();
        jPanel11 = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        txtKeySearchProjectByName = new javax.swing.JTextField();
        btnSearchProject = new javax.swing.JButton();
        btnAddProject = new javax.swing.JButton();
        btnEditProject = new javax.swing.JButton();
        btnDeleteProject = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jPanel28 = new javax.swing.JPanel();
        jLabel50 = new javax.swing.JLabel();
        txtKeySearchLocationByName = new javax.swing.JTextField();
        btnSearchLocation = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblLocation = new javax.swing.JTable();
        btnAddLocation = new javax.swing.JButton();
        btnEditLocation = new javax.swing.JButton();
        btnDeleteLocation = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jLabel35 = new javax.swing.JLabel();
        txtKeySearchDepartmentByName = new javax.swing.JTextField();
        btnSearchDepartment = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblDepartment = new javax.swing.JTable();
        btnAddDepartment = new javax.swing.JButton();
        btnEditDepartment = new javax.swing.JButton();
        btnDeleteDepartment = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jChangePass = new javax.swing.JMenuItem();
        jLogout = new javax.swing.JMenuItem();
        jExit = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("EMPLOYEE TRANSFER MANAGEMENT - PROJECT");

        jToolBar1.setRollover(true);

        lblEmail.setText("Email    ");
        jToolBar1.add(lblEmail);

        lblEmailContent.setFont(new java.awt.Font("Tahoma", 1, 11));
        lblEmailContent.setForeground(new java.awt.Color(255, 0, 0));
        lblEmailContent.setText(null);
        jToolBar1.add(lblEmailContent);
        jToolBar1.add(jSeparator3);

        btnChangePass.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/24x24/password.png"))); // NOI18N
        btnChangePass.setFocusable(false);
        btnChangePass.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnChangePass.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnChangePass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangePassActionPerformed(evt);
            }
        });
        jToolBar1.add(btnChangePass);
        jToolBar1.add(jSeparator4);

        btnHelp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/24x24/help.png"))); // NOI18N
        btnHelp.setFocusable(false);
        btnHelp.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnHelp.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHelpActionPerformed(evt);
            }
        });
        jToolBar1.add(btnHelp);
        jToolBar1.add(jSeparator1);

        btnAbout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/24x24/info.png"))); // NOI18N
        btnAbout.setFocusable(false);
        btnAbout.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAbout.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAboutActionPerformed(evt);
            }
        });
        jToolBar1.add(btnAbout);
        jToolBar1.add(jSeparator2);

        btnLogoff.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/24x24/logout.png"))); // NOI18N
        btnLogoff.setFocusable(false);
        btnLogoff.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnLogoff.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnLogoff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoffActionPerformed(evt);
            }
        });
        jToolBar1.add(btnLogoff);

        pnlHeader.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlHeader.setPreferredSize(new java.awt.Dimension(1004, 119));

        jLabel1.setFont(new java.awt.Font("Arial", 0, 24));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/banner.jpg"))); // NOI18N

        javax.swing.GroupLayout pnlHeaderLayout = new javax.swing.GroupLayout(pnlHeader);
        pnlHeader.setLayout(pnlHeaderLayout);
        pnlHeaderLayout.setHorizontalGroup(
            pnlHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlHeaderLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlHeaderLayout.setVerticalGroup(
            pnlHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHeaderLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Infomation", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 12))); // NOI18N

        lblFullNameContent.setText(null);

        lblFullName.setText("Full Name:");

        lbEmail.setText("Email: ");

        lblEmailContent2.setText(null);

        lbladminID.setText("Administrator ID:");

        lbladminIDContent.setText(null);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbladminID)
                    .addComponent(lblFullName)
                    .addComponent(lbEmail))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblEmailContent2)
                    .addComponent(lblFullNameContent)
                    .addComponent(lbladminIDContent))
                .addContainerGap(687, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbladminID)
                    .addComponent(lbladminIDContent))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFullName)
                    .addComponent(lblFullNameContent))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbEmail)
                    .addComponent(lblEmailContent2))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Static", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 12))); // NOI18N

        jLabel3.setText("Total Employee :");

        jLabel5.setText("Total Approve Transfer Request:");

        jLabel7.setText("Total Not Approve Transfer Request:");

        jLabel8.setText("Total Waiting Transfer Request:");

        jLabel9.setText("Total Transfer Request:");

        jLabel10.setText("Department:");

        jLabel11.setText("Location:");

        jLabel25.setText("Project:");

        lblTotalApprove.setFont(new java.awt.Font("Tahoma", 1, 11));
        lblTotalApprove.setForeground(new java.awt.Color(255, 0, 0));
        lblTotalApprove.setText(null);

        lblTotalNotApprove.setFont(new java.awt.Font("Tahoma", 1, 11));
        lblTotalNotApprove.setForeground(new java.awt.Color(255, 0, 0));
        lblTotalNotApprove.setText(null);

        lblTotalWaiting.setFont(new java.awt.Font("Tahoma", 1, 11));
        lblTotalWaiting.setForeground(new java.awt.Color(255, 0, 0));
        lblTotalWaiting.setText(null);

        lblTotalE.setFont(new java.awt.Font("Tahoma", 1, 11));
        lblTotalE.setForeground(new java.awt.Color(255, 0, 0));
        lblTotalE.setText(null);

        lblTotalD.setFont(new java.awt.Font("Tahoma", 1, 11));
        lblTotalD.setForeground(new java.awt.Color(255, 0, 0));
        lblTotalD.setText(null);

        lblTotalL.setFont(new java.awt.Font("Tahoma", 1, 11));
        lblTotalL.setForeground(new java.awt.Color(255, 0, 0));
        lblTotalL.setText(null);

        lblTotalP.setFont(new java.awt.Font("Tahoma", 1, 11));
        lblTotalP.setForeground(new java.awt.Color(255, 0, 0));
        lblTotalP.setText(null);

        lblTotalTransferRequest.setFont(new java.awt.Font("Tahoma", 1, 11));
        lblTotalTransferRequest.setForeground(new java.awt.Color(255, 0, 0));
        lblTotalTransferRequest.setText(null);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel8)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7))
                .addGap(6, 6, 6)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel29)
                    .addComponent(lblTotalWaiting)
                    .addComponent(lblTotalNotApprove)
                    .addComponent(lblTotalApprove)
                    .addComponent(lblTotalTransferRequest))
                .addGap(98, 98, 98)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel25))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTotalP)
                    .addComponent(lblTotalL)
                    .addComponent(lblTotalD)
                    .addComponent(lblTotalE))
                .addContainerGap(406, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3)
                    .addComponent(lblTotalApprove)
                    .addComponent(lblTotalE))
                .addGap(18, 18, 18)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(lblTotalD))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(lblTotalL))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel25)
                            .addComponent(lblTotalP)))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(lblTotalNotApprove))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(lblTotalWaiting))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTotalTransferRequest)
                            .addComponent(jLabel9)
                            .addComponent(jLabel29))))
                .addContainerGap(202, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Home                      ", new javax.swing.ImageIcon(getClass().getResource("/Icons/Home.png")), jPanel1); // NOI18N

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 12))); // NOI18N

        jLabel17.setText("Status");

        jLabel18.setText("Employee");

        cbSearchTransferByStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All", "Approve", "Not Approve", "Waiting" }));
        cbSearchTransferByStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSearchTransferByStatusActionPerformed(evt);
            }
        });

        cbSearchTransferByEmployee.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbSearchTransferByEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSearchTransferByEmployeeActionPerformed(evt);
            }
        });

        jLabel19.setText("From Location");

        jLabel20.setText("From Department");

        jLabel21.setText("From Project");

        cbSearchTransferByFromLocation.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbSearchTransferByFromLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSearchTransferByFromLocationActionPerformed(evt);
            }
        });

        cbSearchTransferByFromDepartment.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbSearchTransferByFromDepartment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSearchTransferByFromDepartmentActionPerformed(evt);
            }
        });

        cbSearchTransferByFromProject.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbSearchTransferByFromProject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSearchTransferByFromProjectActionPerformed(evt);
            }
        });

        jLabel22.setText("To Location");

        jLabel23.setText("To Department");

        jLabel24.setText("To Project");

        cbSearchTransferByToDepartment.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbSearchTransferByToDepartment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSearchTransferByToDepartmentActionPerformed(evt);
            }
        });

        cbSearchTransferByToLocation.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbSearchTransferByToLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSearchTransferByToLocationActionPerformed(evt);
            }
        });

        cbSearchTransferByToProject.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbSearchTransferByToProject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSearchTransferByToProjectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbSearchTransferByEmployee, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbSearchTransferByStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel20)
                            .addComponent(jLabel19)))
                    .addComponent(jLabel21))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbSearchTransferByFromDepartment, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbSearchTransferByFromLocation, 0, 195, Short.MAX_VALUE)
                    .addComponent(cbSearchTransferByFromProject, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel23, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel24, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbSearchTransferByToDepartment, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbSearchTransferByToProject, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbSearchTransferByToLocation, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbSearchTransferByFromLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbSearchTransferByFromDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbSearchTransferByFromProject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21)
                            .addComponent(jLabel24)))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(cbSearchTransferByStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(cbSearchTransferByEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20)))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(cbSearchTransferByToLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbSearchTransferByToDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel23))
                        .addGap(8, 8, 8)
                        .addComponent(cbSearchTransferByToProject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tblTransfer.setModel(tablemodelTrans);
        tblTransfer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTransferMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblTransfer);

        btnMakeTransfer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/add_page.png"))); // NOI18N
        btnMakeTransfer.setText("Make Transfer");
        btnMakeTransfer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMakeTransferActionPerformed(evt);
            }
        });

        btnViewDetails.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/accept_page.png"))); // NOI18N
        btnViewDetails.setText("View Details");
        btnViewDetails.setEnabled(false);
        btnViewDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDetailsActionPerformed(evt);
            }
        });

        btnDeleteTransfer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/delete.png"))); // NOI18N
        btnDeleteTransfer.setText("Delete");
        btnDeleteTransfer.setEnabled(false);
        btnDeleteTransfer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteTransferActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 804, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnMakeTransfer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnViewDetails)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDeleteTransfer)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnMakeTransfer)
                    .addComponent(btnViewDetails)
                    .addComponent(btnDeleteTransfer))
                .addGap(37, 37, 37))
        );

        jTabbedPane1.addTab("Transfer Manager        ", new javax.swing.ImageIcon(getClass().getResource("/Icons/refresh.png")), jPanel2); // NOI18N

        tblEmployee.setModel(tablemodelEmpl);
        tblEmployee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblEmployeeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblEmployee);

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search information Employee", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 12))); // NOI18N

        jLabel12.setText("Name Employee");

        txtKeySearchByName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtKeySearchByNameKeyTyped(evt);
            }
        });

        cbSearchEmployeeByLocation.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select" }));
        cbSearchEmployeeByLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSearchEmployeeByLocationActionPerformed(evt);
            }
        });

        cbSearchEmployeeByDepartment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSearchEmployeeByDepartmentActionPerformed(evt);
            }
        });

        cbSearchEmployeeByProject.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select" }));
        cbSearchEmployeeByProject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSearchEmployeeByProjectActionPerformed(evt);
            }
        });

        jLabel14.setText("Location");

        jLabel15.setText("Department");

        jLabel16.setText("Project");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbSearchEmployeeByLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtKeySearchByName, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbSearchEmployeeByProject, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbSearchEmployeeByDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(100, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(txtKeySearchByName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(cbSearchEmployeeByLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbSearchEmployeeByDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbSearchEmployeeByProject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnAddEmployee.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/add.png"))); // NOI18N
        btnAddEmployee.setText("Add");
        btnAddEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddEmployeeActionPerformed(evt);
            }
        });

        btnEditEmployee.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/Document Edit (Copy).png"))); // NOI18N
        btnEditEmployee.setText("Edit");
        btnEditEmployee.setEnabled(false);
        btnEditEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditEmployeeActionPerformed(evt);
            }
        });

        btnDeleteEmployee.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/delete.png"))); // NOI18N
        btnDeleteEmployee.setText("Delete");
        btnDeleteEmployee.setEnabled(false);
        btnDeleteEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteEmployeeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 801, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnAddEmployee)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditEmployee)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDeleteEmployee)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDeleteEmployee)
                    .addComponent(btnEditEmployee)
                    .addComponent(btnAddEmployee))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Employees Manager", new javax.swing.ImageIcon(getClass().getResource("/Icons/Buddy Group.png")), jPanel3); // NOI18N

        jScrollPane4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                none(evt);
            }
        });

        tblProject.setModel(tablemodelProject);
        tblProject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProjectMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tblProject);

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search information Project", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 11))); // NOI18N

        jLabel34.setFont(new java.awt.Font("Arial", 0, 11));
        jLabel34.setText("Name Project");

        txtKeySearchProjectByName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtKeySearchProjectByNameKeyTyped(evt);
            }
        });

        btnSearchProject.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/search.png"))); // NOI18N
        btnSearchProject.setText("Search");
        btnSearchProject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchProjectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel34)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtKeySearchProjectByName, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(btnSearchProject)
                .addContainerGap(403, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(txtKeySearchProjectByName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchProject))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        btnAddProject.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/add.png"))); // NOI18N
        btnAddProject.setText("Add");
        btnAddProject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddProjectActionPerformed(evt);
            }
        });

        btnEditProject.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/Document Edit (Copy).png"))); // NOI18N
        btnEditProject.setText("Edit");
        btnEditProject.setEnabled(false);
        btnEditProject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditProjectActionPerformed(evt);
            }
        });

        btnDeleteProject.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/delete.png"))); // NOI18N
        btnDeleteProject.setText("Delete");
        btnDeleteProject.setEnabled(false);
        btnDeleteProject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteProjectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(btnAddProject)
                        .addGap(18, 18, 18)
                        .addComponent(btnEditProject)
                        .addGap(18, 18, 18)
                        .addComponent(btnDeleteProject)))
                .addContainerGap())
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 801, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 374, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEditProject)
                    .addComponent(btnDeleteProject)
                    .addComponent(btnAddProject))
                .addContainerGap())
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addGap(105, 105, 105)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(46, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Project Manager", new javax.swing.ImageIcon(getClass().getResource("/Icons/Folders.png")), jPanel4); // NOI18N

        jPanel28.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search information Department", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 11))); // NOI18N

        jLabel50.setText("Name Department");

        txtKeySearchLocationByName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtKeySearchLocationByNameKeyTyped(evt);
            }
        });

        btnSearchLocation.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/search.png"))); // NOI18N
        btnSearchLocation.setText("Search");
        btnSearchLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchLocationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel28Layout = new javax.swing.GroupLayout(jPanel28);
        jPanel28.setLayout(jPanel28Layout);
        jPanel28Layout.setHorizontalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel50)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtKeySearchLocationByName, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(btnSearchLocation)
                .addContainerGap(380, Short.MAX_VALUE))
        );
        jPanel28Layout.setVerticalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel50)
                    .addComponent(txtKeySearchLocationByName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchLocation))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        tblLocation.setModel(tablemodelLocation);
        tblLocation.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblLocationtbLocationMouseClick(evt);
            }
        });
        jScrollPane3.setViewportView(tblLocation);

        btnAddLocation.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/add_page.png"))); // NOI18N
        btnAddLocation.setText("Add");
        btnAddLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddLocationActionPerformed(evt);
            }
        });

        btnEditLocation.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/Document Edit (Copy).png"))); // NOI18N
        btnEditLocation.setText("Edit");
        btnEditLocation.setEnabled(false);
        btnEditLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditLocationActionPerformed(evt);
            }
        });

        btnDeleteLocation.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/delete.png"))); // NOI18N
        btnDeleteLocation.setText("Delete");
        btnDeleteLocation.setEnabled(false);
        btnDeleteLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteLocationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel28, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(btnAddLocation)
                        .addGap(18, 18, 18)
                        .addComponent(btnEditLocation)
                        .addGap(13, 13, 13)
                        .addComponent(btnDeleteLocation))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 801, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDeleteLocation)
                    .addComponent(btnEditLocation)
                    .addComponent(btnAddLocation))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Location Manager", new javax.swing.ImageIcon(getClass().getResource("/Icons/earth_location.png")), jPanel6); // NOI18N

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search information Department", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 11))); // NOI18N

        jLabel35.setText("Name Department");

        txtKeySearchDepartmentByName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtKeySearchDepartmentByNameKeyTyped(evt);
            }
        });

        btnSearchDepartment.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/search.png"))); // NOI18N
        btnSearchDepartment.setText("Search");
        btnSearchDepartment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchDepartmentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel35)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtKeySearchDepartmentByName, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(btnSearchDepartment)
                .addContainerGap(379, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel35)
                    .addComponent(txtKeySearchDepartmentByName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchDepartment))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        tblDepartment.setModel(tablemodelDepartment);
        tblDepartment.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDepartmentMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tblDepartment);

        btnAddDepartment.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/add_page.png"))); // NOI18N
        btnAddDepartment.setText("Add");
        btnAddDepartment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddDepartmentActionPerformed(evt);
            }
        });

        btnEditDepartment.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/Document Edit (Copy).png"))); // NOI18N
        btnEditDepartment.setText("Edit");
        btnEditDepartment.setEnabled(false);
        btnEditDepartment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditDepartmentActionPerformed(evt);
            }
        });

        btnDeleteDepartment.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/delete.png"))); // NOI18N
        btnDeleteDepartment.setText("Delete");
        btnDeleteDepartment.setEnabled(false);
        btnDeleteDepartment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteDepartmentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 801, Short.MAX_VALUE)
                    .addComponent(jPanel13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(btnAddDepartment)
                        .addGap(18, 18, 18)
                        .addComponent(btnEditDepartment)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDeleteDepartment)
                        .addGap(12, 12, 12)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddDepartment)
                    .addComponent(btnEditDepartment)
                    .addComponent(btnDeleteDepartment))
                .addGap(23, 23, 23))
        );

        jTabbedPane1.addTab("Department Manager", new javax.swing.ImageIcon(getClass().getResource("/Icons/folder_full.png")), jPanel5); // NOI18N

        jMenu1.setText("File");

        jChangePass.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        jChangePass.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/process.png"))); // NOI18N
        jChangePass.setText("Change Password");
        jChangePass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jChangePassActionPerformed(evt);
            }
        });
        jMenu1.add(jChangePass);

        jLogout.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
        jLogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/logout.png"))); // NOI18N
        jLogout.setText("Logout");
        jLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jLogoutActionPerformed(evt);
            }
        });
        jMenu1.add(jLogout);

        jExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        jExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/16x16/delete.png"))); // NOI18N
        jExit.setText("Exit");
        jExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jExitActionPerformed(evt);
            }
        });
        jMenu1.add(jExit);

        jMenuBar1.add(jMenu1);

        jMenu3.setText("Report");

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Datetime");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem2);

        jMenuBar1.add(jMenu3);

        jMenu2.setText("Help");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        jMenuItem1.setText("Help");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1, 0, 0, Short.MAX_VALUE)
                    .addComponent(pnlHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 1004, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 1004, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void loadStatic() throws SQLException {
        String totalApprove = String.valueOf(TransferDAO.countTotalApprove());
        String totalNotApprove = String.valueOf(TransferDAO.countTotalNotApprove());
        String totalTranferRequest = String.valueOf(TransferDAO.countTotalRequest());
        String totalTransferWaiting = String.valueOf(TransferDAO.countTotalWaiting());
        String totalEmployee = String.valueOf(EmployeeDAO.countTotalEmployee());
        String totalDepartment = String.valueOf(DepartmentDAO.countTotalDepartment());
        String totalProject = String.valueOf(ProjectDAO.countTotalProject());
        String totalLocation = String.valueOf(LocationDAO.countTotalLocation());
        lblTotalApprove.setText(totalApprove);
        lblTotalNotApprove.setText(totalNotApprove);
        lblTotalTransferRequest.setText(totalTranferRequest);
        lblTotalWaiting.setText(totalTransferWaiting);
        lblTotalE.setText(totalEmployee);
        lblTotalD.setText(totalDepartment);
        lblTotalL.setText(totalLocation);
        lblTotalP.setText(totalProject);

    }

    public static void onLoadTableEmployee() {
        tablemodelEmpl.dataChanged();
        try {
            EmployeeDAO.loadEmployeeToTable();
        } catch (SQLException ex) {
        }
    }

    public static void onLoadTableTransfer() {
        tablemodelTrans.dataChanged();
        try {
            TransferDAO.loadTransferToTable();
        } catch (SQLException ex) {
        }
    }

    public static void onLoadTableLocation() {
        tablemodelLocation.dataChanged();
        try {
            LocationDAO.loadLocationToTable();
        } catch (SQLException ex) {
        }
    }

    //khangdv
    public static void onLoadTableProject() {
        tablemodelProject.dataChanged();
        try {
            ProjectDAO.loadProjectToTable();
        } catch (SQLException ex) {
        }
    }

    public static void onloadTableDepartment() {
        try {
            tablemodelDepartment.dataChanged();
            DepartmentDAO.loadDepartmentToTable();
        } catch (SQLException ex) {
        }
    }

    public void loadEmployee() throws SQLException {
        Vector v = new Vector();
        v = EmployeeDAO.getNameEmployee();
        cbSearchTransferByEmployee.setModel(new DefaultComboBoxModel(v));
    }

    public void loadLocation() throws SQLException {
        Vector v = new Vector();
        v = LocationDAO.getLocationFromDB();
        cbSearchEmployeeByLocation.setModel(new DefaultComboBoxModel(v));
        cbSearchTransferByFromLocation.setModel(new DefaultComboBoxModel(v));
        cbSearchTransferByToLocation.setModel(new DefaultComboBoxModel(v));
    }

    public void loadDeparment() throws SQLException {
        Vector v = new Vector();
        v = DepartmentDAO.getDepartmentFromDB();
        cbSearchEmployeeByDepartment.setModel(new DefaultComboBoxModel(v));
        cbSearchTransferByFromDepartment.setModel(new DefaultComboBoxModel(v));
        cbSearchTransferByToDepartment.setModel(new DefaultComboBoxModel(v));
    }

    public void loadProject() throws SQLException {
        Vector v = new Vector();
        v = ProjectDAO.getProjectFromDB();
        cbSearchEmployeeByProject.setModel(new DefaultComboBoxModel(v));
        cbSearchTransferByFromProject.setModel(new DefaultComboBoxModel(v));
        cbSearchTransferByToProject.setModel(new DefaultComboBoxModel(v));
    }

    public void loadAdmin(Admin objAdmin) {
        oldPass = objAdmin.getPassWord();
        lbladminIDContent.setText(String.valueOf(objAdmin.getAdminID()));
        lblEmailContent.setText(objAdmin.getEmail());
        lblFullNameContent.setText(objAdmin.getFullName());
        lblEmailContent2.setText(objAdmin.getEmail());
    }

    private void jExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jExitActionPerformed

    private void btnAddEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddEmployeeActionPerformed
        // TODO add your handling code here:
        try {
            addEmployee = new AddEmployee();
            addEmployee.setLocationRelativeTo(addEmployee);
            addEmployee.setVisible(true);
        } catch (SQLException ex) {
        }

    }//GEN-LAST:event_btnAddEmployeeActionPerformed

    private void txtKeySearchByNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKeySearchByNameKeyTyped
        try {
            tablemodelEmpl.dataChanged();
            EmployeeDAO.getEmployeeByName(txtKeySearchByName.getText());
        } catch (SQLException ex) {
        }
    }//GEN-LAST:event_txtKeySearchByNameKeyTyped

    private void cbSearchEmployeeByLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSearchEmployeeByLocationActionPerformed
        // TODO add your handling code here:
        if (cbSearchEmployeeByLocation.getSelectedIndex() == 0) {
            onLoadTableEmployee();
        } else {
            try {
                locationID = LocationDAO.getLocationID((String) cbSearchEmployeeByLocation.getSelectedItem());
                tablemodelEmpl.dataChanged();
                EmployeeDAO.getEmployeeByLocation(locationID);
            } catch (SQLException ex) {
            }
        }
    }//GEN-LAST:event_cbSearchEmployeeByLocationActionPerformed

    private void cbSearchEmployeeByDepartmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSearchEmployeeByDepartmentActionPerformed
        // TODO add your handling code here:
        if (cbSearchEmployeeByDepartment.getSelectedIndex() == 0) {
            onLoadTableEmployee();
        } else {
            try {
                departmentID = DepartmentDAO.getDepartmentID((String) cbSearchEmployeeByDepartment.getSelectedItem());
                tablemodelEmpl.dataChanged();
                System.out.println(departmentID);
                EmployeeDAO.getEmployeeByDepartment(departmentID);
            } catch (SQLException ex) {
            }
        }
    }//GEN-LAST:event_cbSearchEmployeeByDepartmentActionPerformed

    private void cbSearchEmployeeByProjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSearchEmployeeByProjectActionPerformed
        // TODO add your handling code here:
        if (cbSearchEmployeeByProject.getSelectedIndex() == 0) {
            onLoadTableEmployee();
        } else {
            try {
                projectID = ProjectDAO.getProjectID((String) cbSearchEmployeeByProject.getSelectedItem());
                tablemodelEmpl.dataChanged();
                EmployeeDAO.getEmployeeByProject(projectID);
            } catch (SQLException ex) {
            }
        }
    }//GEN-LAST:event_cbSearchEmployeeByProjectActionPerformed

    private void btnEditEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditEmployeeActionPerformed
        // TODO add your handling code here:   
        if (tblEmployeeSelect) {
            try {
                objE = EmployeeDAO.getEmployeeByID(employeeID);
                editEmployee = new EditEmployee();
                editEmployee.setLocationRelativeTo(editEmployee);
                editEmployee.setVisible(true);
                editEmployee.loadEmployee(objE);
            } catch (SQLException ex) {
                Logger.getLogger(MainAdministrator.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Please select Employee");
        }

    }//GEN-LAST:event_btnEditEmployeeActionPerformed

    private void tblEmployeeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEmployeeMouseClicked
        // TODO add your handling code here:
        tblEmployeeSelect = tblEmployee.getFocusTraversalKeysEnabled();
        employeeID = Integer.parseInt(tblEmployee.getValueAt(tblEmployee.getSelectedRow(), 0).toString());
        btnEditEmployee.setEnabled(true);
        btnDeleteEmployee.setEnabled(true);
        if (evt.getClickCount() == 2) {
            try {
                objE = EmployeeDAO.getEmployeeByID(employeeID);
                editEmployee = new EditEmployee();
                editEmployee.setLocationRelativeTo(editEmployee);
                editEmployee.setVisible(true);
                editEmployee.loadEmployee(objE);
            } catch (SQLException ex) {
                Logger.getLogger(MainAdministrator.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_tblEmployeeMouseClicked

    private void btnDeleteEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteEmployeeActionPerformed
        // TODO add your handling code here:
        int countTransfer = TransferDAO.countTransferByEmployeeID(employeeID);
        if (countTransfer > 0) {
            JOptionPane.showMessageDialog(null, "Can not be deleted! This Employee contains Transfer relevant ");
        } else {
            if (tblEmployeeSelect) {
                int confirm = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete", "Confirm", JOptionPane.YES_NO_OPTION);
                if (confirm == JOptionPane.YES_OPTION) {
                    EmployeeDAO.deleteEmployee(employeeID);
                    tablemodelEmpl.removeRow(tblEmployee.getSelectedRow());
                    JOptionPane.showMessageDialog(null, "Delete Employee ID: " + employeeID + " successfully");
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Please select Employee");
            }
        }
    }//GEN-LAST:event_btnDeleteEmployeeActionPerformed

    private void btnMakeTransferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMakeTransferActionPerformed
        try {
            // TODO add your handling code here:
            MakeTransfer makeTransfer = new MakeTransfer();
            makeTransfer.setLocationRelativeTo(makeTransfer);
            makeTransfer.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(MainAdministrator.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnMakeTransferActionPerformed

    private void tblLocationtbLocationMouseClick(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblLocationtbLocationMouseClick
        // TODO add your handling code here:
        locationID = Integer.parseInt(tblLocation.getValueAt(tblLocation.getSelectedRow(), 0).toString());
        tblLocationSelect = tblLocation.getFocusTraversalKeysEnabled();
        btnEditLocation.setEnabled(true);
        btnDeleteLocation.setEnabled(true);
        if (evt.getClickCount() == 2) {

            ViewDepartmentOfLocation viewDepartmentOfLocation = new ViewDepartmentOfLocation();
            viewDepartmentOfLocation.setLocationRelativeTo(viewDepartmentOfLocation);
            DepartmentDAO.loadDepartmentToTable2(locationID);
            viewDepartmentOfLocation.setVisible(true);
        }
}//GEN-LAST:event_tblLocationtbLocationMouseClick

    private void txtKeySearchDepartmentByNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKeySearchDepartmentByNameKeyTyped
        // TODO add your handling code here:
        tablemodelDepartment.dataChanged();
        DepartmentDAO.getProjectByName(txtKeySearchDepartmentByName.getText());
    }//GEN-LAST:event_txtKeySearchDepartmentByNameKeyTyped

    private void btnAddDepartmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddDepartmentActionPerformed
        // TODO add your handling code here:
        addDepartment = new AddDepartment(null, true);
        addDepartment.setLocationRelativeTo(addDepartment);
        addDepartment.setVisible(true);
    }//GEN-LAST:event_btnAddDepartmentActionPerformed

    private void btnEditDepartmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditDepartmentActionPerformed
        // TODO add your handling code here:
        if (tblDepartmentSelect) {
            objDepartment = DepartmentDAO.getDepartmentByID(departmentID);
            editDepartment = new EditDepartment(this, true);
            editDepartment.setLocationRelativeTo(editProject);
            editDepartment.loadDepartment(objDepartment);
            editDepartment.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Please select Department");
        }

    }//GEN-LAST:event_btnEditDepartmentActionPerformed

    private void btnDeleteDepartmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteDepartmentActionPerformed
        // TODO add your handling code here:
        int countTransfer = TransferDAO.countTransferByToDepartmentID(departmentID);
        int countEmployee = EmployeeDAO.countEmployeeByDepartmentID(departmentID);
        if (countTransfer > 0) {
            JOptionPane.showMessageDialog(null, "Can not be deleted! This Departments contains Transfer relevant ");
        } else if (countEmployee > 0) {
            JOptionPane.showMessageDialog(null, "Can not be deleted! This Departments contains Employee relevant");
        } else {
            if (tblDepartmentSelect) {
                int confirm = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete", "Confirm", JOptionPane.YES_NO_OPTION);
                if (confirm == JOptionPane.YES_OPTION) {
                    DepartmentDAO.deleteDepartment(departmentID);
                    JOptionPane.showMessageDialog(this, "Delete Department ID: " + departmentID + " successfully");
                    MainAdministrator.onloadTableDepartment();
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Please select Department");
            }

        }
    }//GEN-LAST:event_btnDeleteDepartmentActionPerformed

    private void tblTransferMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTransferMouseClicked
        // TODO add your handling code here:
        transferID = Integer.parseInt(tblTransfer.getValueAt(tblTransfer.getSelectedRow(), 0).toString());
        tblTransferSelect = tblTransfer.getFocusTraversalKeysEnabled();
        btnViewDetails.setEnabled(true);
        btnDeleteTransfer.setEnabled(true);
        try {
            objTransfer = TransferDAO.getTransferByID(transferID);
            if (evt.getClickCount() == 2) {
                TransferDetails transferDetails = new TransferDetails();
                transferDetails.setLocationRelativeTo(transferDetails);
                transferDetails.setVisible(true);
                transferDetails.loadTransferDetails(objTransfer);
            }
        } catch (SQLException ex) {
            System.out.println(ex);
        }

    }//GEN-LAST:event_tblTransferMouseClicked

    private void tblProjectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProjectMouseClicked
        // TODO add your handling code here:
        tblProjectSelect = tblProject.getFocusTraversalKeysEnabled();
        projectID = Integer.parseInt(tblProject.getValueAt(tblProject.getSelectedRow(), 0).toString());
        btnEditProject.setEnabled(true);
        btnDeleteProject.setEnabled(true);
        if (evt.getClickCount() == 2) {
            objProject = ProjectDAO.getProjectByID(projectID);
            editProject = new EditProject();
            editProject.setLocationRelativeTo(editProject);
            editProject.setVisible(true);
            editProject.loadProject(objProject);
        }
}//GEN-LAST:event_tblProjectMouseClicked

    private void btnAddProjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddProjectActionPerformed
        addProject = new AddProject();
        addProject.setLocationRelativeTo(addProject);
        addProject.setVisible(true);
}//GEN-LAST:event_btnAddProjectActionPerformed

    private void btnEditProjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditProjectActionPerformed
        // TODO add your handling code here:
        if (tblProjectSelect) {
            objProject = ProjectDAO.getProjectByID(projectID);
            editProject = new EditProject();
            editProject.setLocationRelativeTo(editProject);
            editProject.setVisible(true);
            editProject.loadProject(objProject);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Please select Project");
        }
    }//GEN-LAST:event_btnEditProjectActionPerformed

    private void btnDeleteProjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteProjectActionPerformed
        int countEmloyee = EmployeeDAO.countEmployeeByProjectID(projectID);
        if (countEmloyee > 0) {
            JOptionPane.showMessageDialog(null, "Can not be deleted! This Project contains Employee relevant ");
        } else {
            // TODO add your handling code here:
            if (tblProjectSelect) {
                int confirm = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete", "Confirm", JOptionPane.YES_NO_OPTION);
                if (confirm == JOptionPane.YES_OPTION) {
                    ProjectDAO.deleteProject(projectID);
                    tablemodelProject.removeRow(tblProject.getSelectedRow());
                    JOptionPane.showMessageDialog(null, "Delete Project ID: " + projectID + " successfully");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Please select Project");
            }
        }
}//GEN-LAST:event_btnDeleteProjectActionPerformed

    private void txtKeySearchProjectByNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKeySearchProjectByNameKeyTyped
        // TODO add your handling code here:
        tablemodelProject.dataChanged();
        ProjectDAO.getProjectByName(txtKeySearchProjectByName.getText());
    }//GEN-LAST:event_txtKeySearchProjectByNameKeyTyped

    private void btnSearchProjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchProjectActionPerformed
        // TODO add your handling code here:
        if (!validateInfo.check(txtKeySearchProjectByName.getText())) {
            JOptionPane.showMessageDialog(null, "Please enter name project to search");
            txtKeySearchProjectByName.requestFocus();
        } else {
            tablemodelProject.dataChanged();
            ProjectDAO.getProjectByName(txtKeySearchProjectByName.getText());
        }
    }//GEN-LAST:event_btnSearchProjectActionPerformed

    private void btnDeleteLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteLocationActionPerformed
        // TODO add your handling code here:
        int countDepartment = DepartmentDAO.countDepartmentByLocationID(locationID);
        int countEmployee = EmployeeDAO.countEmployeeByLocationID(locationID);
        if (countDepartment > 0) {
            JOptionPane.showMessageDialog(null, "Can not be deleted! This address contains departments relevant");
        } else if (countEmployee > 0) {
            JOptionPane.showMessageDialog(null, "Can not be deleted! This address contains employees relevant");
        } else {
            if (tblLocationSelect) {
                int confirm = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete", "Confirm", JOptionPane.YES_NO_OPTION);
                if (confirm == JOptionPane.YES_OPTION) {
                    LocationDAO.deleteLocation(locationID);
                    tablemodelLocation.removeRow(tblLocation.getSelectedRow());
                    JOptionPane.showMessageDialog(this, "Delete Location ID: " + locationID + " successfully");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Please select Location");
            }

        }
}//GEN-LAST:event_btnDeleteLocationActionPerformed

    private void btnEditLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditLocationActionPerformed
        // TODO add your handling code here:
        if (tblLocationSelect) {
            objLocation = LocationDAO.getLocationByID(locationID);
            editLocation = new EditLocation();
            editLocation.setLocationRelativeTo(editLocation);
            editLocation.loadLocation(objLocation);
            editLocation.setVisible(true);

        } else {
            JOptionPane.showMessageDialog(null, "Please select Location");
        }
}//GEN-LAST:event_btnEditLocationActionPerformed

    private void btnAddLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddLocationActionPerformed
        try {
            // TODO add your handling code here:
            addLocation = new AddLocation();
            addLocation.setLocationRelativeTo(addLocation);
            addLocation.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(MainAdministrator.class.getName()).log(Level.SEVERE, null, ex);
        }
}//GEN-LAST:event_btnAddLocationActionPerformed

    private void txtKeySearchLocationByNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKeySearchLocationByNameKeyTyped
        // TODO add your handling code here:
        tablemodelLocation.dataChanged();
        LocationDAO.getProjectByName(txtKeySearchLocationByName.getText());
    }//GEN-LAST:event_txtKeySearchLocationByNameKeyTyped

    private void cbSearchTransferByEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSearchTransferByEmployeeActionPerformed
        // TODO add your handling code here:
        if (cbSearchTransferByEmployee.getSelectedIndex() == 0) {
            onLoadTableTransfer();
        } else {
            try {
                employeeID = EmployeeDAO.getEmployeeID((String) cbSearchTransferByEmployee.getSelectedItem());
                tablemodelTrans.dataChanged();
                EmployeeDAO.getEmployeeByLocation(employeeID);
            } catch (SQLException ex) {
            }
        }
    }//GEN-LAST:event_cbSearchTransferByEmployeeActionPerformed

    private void cbSearchTransferByStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSearchTransferByStatusActionPerformed
        // TODO add your handling code here:
        if (cbSearchTransferByStatus.getSelectedIndex() == 0) {
            onLoadTableTransfer();
        } else {
            try {
                String Status = (String) cbSearchTransferByStatus.getSelectedItem();
                tablemodelTrans.dataChanged();
                TransferDAO.searchTransferByApprove(Status);
            } catch (SQLException ex) {
                System.out.println(ex);
            }
        }
    }//GEN-LAST:event_cbSearchTransferByStatusActionPerformed

    private void cbSearchTransferByFromLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSearchTransferByFromLocationActionPerformed
        // TODO add your handling code here:
        if (cbSearchTransferByFromLocation.getSelectedIndex() == 0) {
            onLoadTableTransfer();
        } else {
            try {
                locationID = LocationDAO.getLocationID((String) cbSearchTransferByFromLocation.getSelectedItem());
                tablemodelTrans.dataChanged();
                TransferDAO.searchTransferByFromLocation(locationID);
            } catch (SQLException ex) {
                System.out.println(ex);
            }
        }
    }//GEN-LAST:event_cbSearchTransferByFromLocationActionPerformed

    private void cbSearchTransferByFromDepartmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSearchTransferByFromDepartmentActionPerformed
        // TODO add your handling code here:
        if (cbSearchTransferByFromDepartment.getSelectedIndex() == 0) {
            onLoadTableTransfer();
        } else {
            try {
                departmentID = DepartmentDAO.getDepartmentID((String) cbSearchTransferByFromDepartment.getSelectedItem());
                tablemodelTrans.dataChanged();
                TransferDAO.searchTransferByFromDepartment(departmentID);
            } catch (SQLException ex) {
                System.out.println(ex);
            }
        }
    }//GEN-LAST:event_cbSearchTransferByFromDepartmentActionPerformed

    private void btnViewDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDetailsActionPerformed
        try {
            // TODO add your handling code here:
            TransferDetails transferDetails = new TransferDetails();
            transferDetails.setLocationRelativeTo(transferDetails);
            transferDetails.setVisible(true);
            transferDetails.loadTransferDetails(objTransfer);
        } catch (SQLException ex) {
            Logger.getLogger(MainAdministrator.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnViewDetailsActionPerformed

    private void cbSearchTransferByToLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSearchTransferByToLocationActionPerformed
        // TODO add your handling code here:
        if (cbSearchTransferByFromLocation.getSelectedIndex() == 0) {
            onLoadTableTransfer();
        } else {
            try {
                locationID = LocationDAO.getLocationID((String) cbSearchTransferByToLocation.getSelectedItem());
                tablemodelTrans.dataChanged();
                TransferDAO.searchTransferByToLocation(locationID);
            } catch (SQLException ex) {
                System.out.println(ex);
            }
        }
    }//GEN-LAST:event_cbSearchTransferByToLocationActionPerformed

    private void cbSearchTransferByToDepartmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSearchTransferByToDepartmentActionPerformed
        // TODO add your handling code here:
        if (cbSearchTransferByToDepartment.getSelectedIndex() == 0) {
            onLoadTableTransfer();
        } else {
            try {
                departmentID = DepartmentDAO.getDepartmentID((String) cbSearchTransferByToDepartment.getSelectedItem());
                tablemodelTrans.dataChanged();
                TransferDAO.searchTransferByToDepartment(departmentID);
            } catch (SQLException ex) {
                System.out.println(ex);
            }
        }
    }//GEN-LAST:event_cbSearchTransferByToDepartmentActionPerformed

    private void cbSearchTransferByToProjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSearchTransferByToProjectActionPerformed
        // TODO add your handling code here:
        if (cbSearchTransferByToProject.getSelectedIndex() == 0) {
            onLoadTableTransfer();
        } else {
            try {
                projectID = ProjectDAO.getProjectID((String) cbSearchTransferByToProject.getSelectedItem());
                tablemodelTrans.dataChanged();
                TransferDAO.searchTransferByToProject(projectID);
            } catch (SQLException ex) {
                System.out.println(ex);
            }
        }
    }//GEN-LAST:event_cbSearchTransferByToProjectActionPerformed

    private void cbSearchTransferByFromProjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSearchTransferByFromProjectActionPerformed
        // TODO add your handling code here:
        if (cbSearchTransferByFromProject.getSelectedIndex() == 0) {
            onLoadTableTransfer();
        } else {
            try {
                projectID = ProjectDAO.getProjectID((String) cbSearchTransferByFromProject.getSelectedItem());
                tablemodelTrans.dataChanged();
                TransferDAO.searchTransferByFromProject(projectID);
            } catch (SQLException ex) {
                System.out.println(ex);
            }
        }
    }//GEN-LAST:event_cbSearchTransferByFromProjectActionPerformed

    private void btnSearchLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchLocationActionPerformed
        // TODO add your handling code here:

        if (!validateInfo.check(txtKeySearchLocationByName.getText())) {
            JOptionPane.showMessageDialog(null, "Please enter location to search");
            txtKeySearchLocationByName.requestFocus();
        } else {
            tablemodelLocation.dataChanged();
            LocationDAO.getProjectByName(txtKeySearchLocationByName.getText());
        }
    }//GEN-LAST:event_btnSearchLocationActionPerformed

    private void btnChangePassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangePassActionPerformed
        // TODO add your handling code here:
        ChangePassA cpa = new ChangePassA();
        cpa.setOldPass(oldPass);
        cpa.setLocationRelativeTo(cpa);
        cpa.setVisible(true);
}//GEN-LAST:event_btnChangePassActionPerformed

    private void btnAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAboutActionPerformed
        // TODO add your handling code here:
        About ab = new About();
        ab.setLocationRelativeTo(ab);
        ab.setVisible(true);
}//GEN-LAST:event_btnAboutActionPerformed

    private void btnLogoffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoffActionPerformed
        // TODO add your handling code here:
        int confirm = JOptionPane.showConfirmDialog(null, "Are you sure you want to log off", "Confirm", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            LoginSystem log = new LoginSystem(this, true);
            log.setLocationRelativeTo(log);
            this.dispose();
            log.setVisible(true);
        }

}//GEN-LAST:event_btnLogoffActionPerformed

    private void jChangePassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jChangePassActionPerformed
        // TODO add your handling code here:
        ChangePassA cpa = new ChangePassA();
        cpa.setOldPass(oldPass);
        cpa.setLocationRelativeTo(cpa);
        cpa.setVisible(true);
    }//GEN-LAST:event_jChangePassActionPerformed

    private void jLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jLogoutActionPerformed
        // TODO add your handling code here:
        LoginSystem log = new LoginSystem(this, true);
        log.setLocationRelativeTo(log);
        this.dispose();
        log.setVisible(true);
    }//GEN-LAST:event_jLogoutActionPerformed

    private void tblDepartmentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDepartmentMouseClicked
        // TODO add your handling code here:
        tblDepartmentSelect = tblDepartment.getFocusTraversalKeysEnabled();
        departmentID = Integer.parseInt(tblDepartment.getValueAt(tblDepartment.getSelectedRow(), 0).toString());
        btnEditDepartment.setEnabled(true);
        btnDeleteDepartment.setEnabled(true);
        if (evt.getClickCount() == 2) {
            objDepartment = DepartmentDAO.getDepartmentByID(departmentID);
            editDepartment = new EditDepartment(this, true);
            editDepartment.setLocationRelativeTo(editProject);
            editDepartment.loadDepartment(objDepartment);
            editDepartment.setVisible(true);

        }
    }//GEN-LAST:event_tblDepartmentMouseClicked

    private void btnDeleteTransferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteTransferActionPerformed
        // TODO add your handling code here:
        if (tblTransferSelect) {
            int confirm = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete", "Confirm", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                TransferDAO.deleteTransfer(transferID);
                tablemodelTrans.removeRow(tblTransfer.getSelectedRow());
                JOptionPane.showMessageDialog(this, "Delete Transfer ID: " + transferID + " successfully");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select Transfer");
        }
    }//GEN-LAST:event_btnDeleteTransferActionPerformed

    private void btnSearchDepartmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchDepartmentActionPerformed
        // TODO add your handling code here:
        if (!validateInfo.check(txtKeySearchDepartmentByName.getText())) {
            JOptionPane.showMessageDialog(null, "Please enter name department to search");
            txtKeySearchDepartmentByName.requestFocus();
        } else {
            tablemodelDepartment.dataChanged();
            DepartmentDAO.getProjectByName(txtKeySearchDepartmentByName.getText());
        }
    }//GEN-LAST:event_btnSearchDepartmentActionPerformed

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        try {
            loadStatic();
            loadEmployee();
            loadProject();
            loadLocation();
            loadDeparment();
        } catch (SQLException ex) {
            Logger.getLogger(MainAdministrator.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void none(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_none
        // TODO add your handling code here:
    }//GEN-LAST:event_none

    private void btnHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHelpActionPerformed
        // TODO add your handling code here:
        Runtime rt = Runtime.getRuntime();
        try {
            String filePath = "Help.chm";
            rt.exec("hh.exe " + filePath);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Cannot load help file!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnHelpActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        ReportTransferByDateTime rtbdt = new ReportTransferByDateTime();
        rtbdt.setLocationRelativeTo(rtbdt);
        rtbdt.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        Runtime rt = Runtime.getRuntime();
        try {
            String filePath = "Help.chm";
            rt.exec("hh.exe " + filePath);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Cannot load help file!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                try {
                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(MainAdministrator.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                    Logger.getLogger(MainAdministrator.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    Logger.getLogger(MainAdministrator.class.getName()).log(Level.SEVERE, null, ex);
                } catch (UnsupportedLookAndFeelException ex) {
                    Logger.getLogger(MainAdministrator.class.getName()).log(Level.SEVERE, null, ex);
                }
                LoginSystem loginJDialog = new LoginSystem(null, true);
                loginJDialog.setLocationRelativeTo(loginJDialog);
                loginJDialog.setVisible(true);

            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAbout;
    private javax.swing.JButton btnAddDepartment;
    private javax.swing.JButton btnAddEmployee;
    private javax.swing.JButton btnAddLocation;
    private javax.swing.JButton btnAddProject;
    private javax.swing.JButton btnChangePass;
    private javax.swing.JButton btnDeleteDepartment;
    private javax.swing.JButton btnDeleteEmployee;
    private javax.swing.JButton btnDeleteLocation;
    private javax.swing.JButton btnDeleteProject;
    private javax.swing.JButton btnDeleteTransfer;
    private javax.swing.JButton btnEditDepartment;
    private javax.swing.JButton btnEditEmployee;
    private javax.swing.JButton btnEditLocation;
    private javax.swing.JButton btnEditProject;
    private javax.swing.JButton btnHelp;
    private javax.swing.JButton btnLogoff;
    private javax.swing.JButton btnMakeTransfer;
    private javax.swing.JButton btnSearchDepartment;
    private javax.swing.JButton btnSearchLocation;
    private javax.swing.JButton btnSearchProject;
    private javax.swing.JButton btnViewDetails;
    private javax.swing.JComboBox cbSearchEmployeeByDepartment;
    private javax.swing.JComboBox cbSearchEmployeeByLocation;
    private javax.swing.JComboBox cbSearchEmployeeByProject;
    private javax.swing.JComboBox cbSearchTransferByEmployee;
    private javax.swing.JComboBox cbSearchTransferByFromDepartment;
    private javax.swing.JComboBox cbSearchTransferByFromLocation;
    private javax.swing.JComboBox cbSearchTransferByFromProject;
    private javax.swing.JComboBox cbSearchTransferByStatus;
    private javax.swing.JComboBox cbSearchTransferByToDepartment;
    private javax.swing.JComboBox cbSearchTransferByToLocation;
    private javax.swing.JComboBox cbSearchTransferByToProject;
    private javax.swing.JMenuItem jChangePass;
    private javax.swing.JMenuItem jExit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuItem jLogout;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lbEmail;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblEmailContent;
    private javax.swing.JLabel lblEmailContent2;
    private javax.swing.JLabel lblFullName;
    private javax.swing.JLabel lblFullNameContent;
    private javax.swing.JLabel lblTotalApprove;
    private javax.swing.JLabel lblTotalD;
    private javax.swing.JLabel lblTotalE;
    private javax.swing.JLabel lblTotalL;
    private javax.swing.JLabel lblTotalNotApprove;
    private javax.swing.JLabel lblTotalP;
    private javax.swing.JLabel lblTotalTransferRequest;
    private javax.swing.JLabel lblTotalWaiting;
    private javax.swing.JLabel lbladminID;
    private javax.swing.JLabel lbladminIDContent;
    private javax.swing.JPanel pnlHeader;
    private javax.swing.JTable tblDepartment;
    private javax.swing.JTable tblEmployee;
    private javax.swing.JTable tblLocation;
    private javax.swing.JTable tblProject;
    private javax.swing.JTable tblTransfer;
    private javax.swing.JTextField txtKeySearchByName;
    private javax.swing.JTextField txtKeySearchDepartmentByName;
    private javax.swing.JTextField txtKeySearchLocationByName;
    private javax.swing.JTextField txtKeySearchProjectByName;
    // End of variables declaration//GEN-END:variables
}
